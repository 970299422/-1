写一下个人对闭包的理解和看法。

        为什么要用函数闭包呢？第一，使用闭包，可以方便调用上下文的局部变量。内部函数可以引用外部函数的参数和变量。第二，还可以加强封装性，可以达到对变量的保护作用。变量不会被回收内存， 变量不会被污染。
        要理解闭包，首先要理解javascript的特殊的变量作用域。变量的作用域无非就两种：全局变量和局部变量。javascript语言的特别之处就在于：函数内部可以直接读取全局变量，但是在函数外部无法读取函数内部的局部。
        我们有时候需要获取到函数内部的局部变量。但是，正常情况下，这是办不到的！只有通过变通的方法才能实现。那就是在函数内部，再定义一个函数。

        在上面的代码中，函数f2种包裹着一个函数，这时f2内部的所有局部变量，对f1都是可见的。但是反过来就不行，f1内部的局部变量，对f2就是不可见的。子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。既然f1可以读取f2中的局部变量，那么只要把f1作为返回值，我们不就可以在f1外部读取它的内部变量了吗！

        上面代码中的f1函数，就是闭包。我的理解是：闭包就是能够读取其他函数内部变量的函数。在本质上，闭包是将函数内部和函数外部连接起来的桥梁。
        但是闭包也有缺点，由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。

        通过使用闭包，我们可以做很多事情。比如模拟面向对象的代码风格；更优雅、更简洁的表达出代码；在某些方面提升代码的执行效率。
